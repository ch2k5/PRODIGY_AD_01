// Generated by view binder compiler. Do not edit!
package com.example.yourcalculator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.yourcalculator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivtyBasicCalculatorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView back;

  @NonNull
  public final AppCompatImageView c;

  @NonNull
  public final TextView console;

  @NonNull
  public final AppCompatImageView delete;

  @NonNull
  public final AppCompatImageView devision;

  @NonNull
  public final TextView eight;

  @NonNull
  public final AppCompatImageView equal;

  @NonNull
  public final TextView five;

  @NonNull
  public final TextView four;

  @NonNull
  public final ImageView history;

  @NonNull
  public final CardView historyView;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final ConstraintLayout mainView;

  @NonNull
  public final AppCompatImageView multiplication;

  @NonNull
  public final TextView nine;

  @NonNull
  public final TextView one;

  @NonNull
  public final AppCompatImageView percentage;

  @NonNull
  public final AppCompatImageView plus;

  @NonNull
  public final AppCompatImageView plusminus;

  @NonNull
  public final TextView point;

  @NonNull
  public final TextView results;

  @NonNull
  public final TextView seven;

  @NonNull
  public final TextView six;

  @NonNull
  public final AppCompatImageView subtraction;

  @NonNull
  public final TextView three;

  @NonNull
  public final TextView tmp1;

  @NonNull
  public final TextView tmp2;

  @NonNull
  public final TextView tmp3;

  @NonNull
  public final TextView tmp4;

  @NonNull
  public final TextView two;

  @NonNull
  public final TextView zero;

  private ActivtyBasicCalculatorBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView back,
      @NonNull AppCompatImageView c, @NonNull TextView console, @NonNull AppCompatImageView delete,
      @NonNull AppCompatImageView devision, @NonNull TextView eight,
      @NonNull AppCompatImageView equal, @NonNull TextView five, @NonNull TextView four,
      @NonNull ImageView history, @NonNull CardView historyView, @NonNull ConstraintLayout main,
      @NonNull ConstraintLayout mainView, @NonNull AppCompatImageView multiplication,
      @NonNull TextView nine, @NonNull TextView one, @NonNull AppCompatImageView percentage,
      @NonNull AppCompatImageView plus, @NonNull AppCompatImageView plusminus,
      @NonNull TextView point, @NonNull TextView results, @NonNull TextView seven,
      @NonNull TextView six, @NonNull AppCompatImageView subtraction, @NonNull TextView three,
      @NonNull TextView tmp1, @NonNull TextView tmp2, @NonNull TextView tmp3,
      @NonNull TextView tmp4, @NonNull TextView two, @NonNull TextView zero) {
    this.rootView = rootView;
    this.back = back;
    this.c = c;
    this.console = console;
    this.delete = delete;
    this.devision = devision;
    this.eight = eight;
    this.equal = equal;
    this.five = five;
    this.four = four;
    this.history = history;
    this.historyView = historyView;
    this.main = main;
    this.mainView = mainView;
    this.multiplication = multiplication;
    this.nine = nine;
    this.one = one;
    this.percentage = percentage;
    this.plus = plus;
    this.plusminus = plusminus;
    this.point = point;
    this.results = results;
    this.seven = seven;
    this.six = six;
    this.subtraction = subtraction;
    this.three = three;
    this.tmp1 = tmp1;
    this.tmp2 = tmp2;
    this.tmp3 = tmp3;
    this.tmp4 = tmp4;
    this.two = two;
    this.zero = zero;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivtyBasicCalculatorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivtyBasicCalculatorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activty_basic_calculator, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivtyBasicCalculatorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.c;
      AppCompatImageView c = ViewBindings.findChildViewById(rootView, id);
      if (c == null) {
        break missingId;
      }

      id = R.id.console;
      TextView console = ViewBindings.findChildViewById(rootView, id);
      if (console == null) {
        break missingId;
      }

      id = R.id.delete;
      AppCompatImageView delete = ViewBindings.findChildViewById(rootView, id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.devision;
      AppCompatImageView devision = ViewBindings.findChildViewById(rootView, id);
      if (devision == null) {
        break missingId;
      }

      id = R.id.eight;
      TextView eight = ViewBindings.findChildViewById(rootView, id);
      if (eight == null) {
        break missingId;
      }

      id = R.id.equal;
      AppCompatImageView equal = ViewBindings.findChildViewById(rootView, id);
      if (equal == null) {
        break missingId;
      }

      id = R.id.five;
      TextView five = ViewBindings.findChildViewById(rootView, id);
      if (five == null) {
        break missingId;
      }

      id = R.id.four;
      TextView four = ViewBindings.findChildViewById(rootView, id);
      if (four == null) {
        break missingId;
      }

      id = R.id.history;
      ImageView history = ViewBindings.findChildViewById(rootView, id);
      if (history == null) {
        break missingId;
      }

      id = R.id.history_view;
      CardView historyView = ViewBindings.findChildViewById(rootView, id);
      if (historyView == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.main_view;
      ConstraintLayout mainView = ViewBindings.findChildViewById(rootView, id);
      if (mainView == null) {
        break missingId;
      }

      id = R.id.multiplication;
      AppCompatImageView multiplication = ViewBindings.findChildViewById(rootView, id);
      if (multiplication == null) {
        break missingId;
      }

      id = R.id.nine;
      TextView nine = ViewBindings.findChildViewById(rootView, id);
      if (nine == null) {
        break missingId;
      }

      id = R.id.one;
      TextView one = ViewBindings.findChildViewById(rootView, id);
      if (one == null) {
        break missingId;
      }

      id = R.id.percentage;
      AppCompatImageView percentage = ViewBindings.findChildViewById(rootView, id);
      if (percentage == null) {
        break missingId;
      }

      id = R.id.plus;
      AppCompatImageView plus = ViewBindings.findChildViewById(rootView, id);
      if (plus == null) {
        break missingId;
      }

      id = R.id.plusminus;
      AppCompatImageView plusminus = ViewBindings.findChildViewById(rootView, id);
      if (plusminus == null) {
        break missingId;
      }

      id = R.id.point;
      TextView point = ViewBindings.findChildViewById(rootView, id);
      if (point == null) {
        break missingId;
      }

      id = R.id.results;
      TextView results = ViewBindings.findChildViewById(rootView, id);
      if (results == null) {
        break missingId;
      }

      id = R.id.seven;
      TextView seven = ViewBindings.findChildViewById(rootView, id);
      if (seven == null) {
        break missingId;
      }

      id = R.id.six;
      TextView six = ViewBindings.findChildViewById(rootView, id);
      if (six == null) {
        break missingId;
      }

      id = R.id.subtraction;
      AppCompatImageView subtraction = ViewBindings.findChildViewById(rootView, id);
      if (subtraction == null) {
        break missingId;
      }

      id = R.id.three;
      TextView three = ViewBindings.findChildViewById(rootView, id);
      if (three == null) {
        break missingId;
      }

      id = R.id.tmp1;
      TextView tmp1 = ViewBindings.findChildViewById(rootView, id);
      if (tmp1 == null) {
        break missingId;
      }

      id = R.id.tmp2;
      TextView tmp2 = ViewBindings.findChildViewById(rootView, id);
      if (tmp2 == null) {
        break missingId;
      }

      id = R.id.tmp3;
      TextView tmp3 = ViewBindings.findChildViewById(rootView, id);
      if (tmp3 == null) {
        break missingId;
      }

      id = R.id.tmp4;
      TextView tmp4 = ViewBindings.findChildViewById(rootView, id);
      if (tmp4 == null) {
        break missingId;
      }

      id = R.id.two;
      TextView two = ViewBindings.findChildViewById(rootView, id);
      if (two == null) {
        break missingId;
      }

      id = R.id.zero;
      TextView zero = ViewBindings.findChildViewById(rootView, id);
      if (zero == null) {
        break missingId;
      }

      return new ActivtyBasicCalculatorBinding((ConstraintLayout) rootView, back, c, console,
          delete, devision, eight, equal, five, four, history, historyView, main, mainView,
          multiplication, nine, one, percentage, plus, plusminus, point, results, seven, six,
          subtraction, three, tmp1, tmp2, tmp3, tmp4, two, zero);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
